[delayed_gcode find_trigger]
gcode:
    QUERY_PROBE
    
    # Check if the probe is triggered
    check_probe

[gcode_macro check_probe]
gcode:
    {% if printer.probe.last_query == 'TRIGGERED' %}
        # RESPOND MSG="Probe triggered STOPPING!!!"
        UPDATE_DELAYED_GCODE ID=find_trigger DURATION=0 # Stop checking probe status
        G28
    {% elif printer.probe.last_query != 'TRIGGERED' %}
        # RESPOND MSG="lowering ..."
        UPDATE_DELAYED_GCODE ID=find_trigger DURATION=1 # Continue checking probe status after a delay of 0.1 seconds
    {% endif %}

#################################################
#################################################

[delayed_gcode probe_test]
gcode:
    G28
    G0 Z5
    # G0 X30 Y30
    PROBE_ACCURACY SAMPLES=50
    
    # Check if the probe is triggered
    check_probe_test

[gcode_macro check_probe_test]
gcode:
    {% if printer.probe.last_query == 'TRIGGERED' %}
        # RESPOND MSG="Probe triggered STOPPING!!!"
        UPDATE_DELAYED_GCODE ID=probe_test DURATION=1 # Stop checking probe status
        #G28
    {% elif printer.probe.last_query != 'TRIGGERED' %}
        # RESPOND MSG="lowering ..."
        UPDATE_DELAYED_GCODE ID=probe_test DURATION=1 # Continue checking probe status after a delay of 0.1 seconds
    {% endif %}
    
#################################################


[gcode_macro probe_acc_100]
description: probe acc 100
gcode:
    G28
    PROBE_ACCURACY SAMPLES=100 #PROBE_SPEED=40

[gcode_macro probe_50]
gcode:
    G28
    PROBE_ACCURACY SAMPLES=50 #PROBE_SPEED=40

    
# [gcode_macro _CLIENT_VARIABLE]
# variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
# variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
# variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
# variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
# variable_retract          : 1.0   ; the value to retract while PAUSE
# variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
# variable_speed_retract    : 35.0  ; retract speed in mm/s
# variable_unretract        : 1.0   ; the value to unretract while RESUME
# variable_speed_unretract  : 35.0  ; unretract speed in mm/s
# variable_speed_hop        : 15.0  ; z move speed in mm/s
# variable_speed_move       : 100.0 ; move speed in mm/s
# #variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
# #variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# #variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# ## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
# #variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
# variable_idle_timeout     : 86400     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
# #variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
# ##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# ## !!! Custom macros, please use with care and review the section of the corresponding macro.
# ## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# ## Only  single line commands are supported, please create a macro if you need more than one command.
# #variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
# #variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
# #variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
# gcode:

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 500.0 ; move speed in mm/s
variable_idle_timeout     : 86400     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored

gcode:

[gcode_macro LOAD_FILAMENT]
description: Load filament into the extruder with LEDs
gcode:
  ###### Start LED effects for filament loading ######
  SET_LOGO_LEDS_OFF           ; Deactivate the logo LED
  SET_NOZZLE_LEDS_ON          ; Activate the nozzle LED to indicate the loading process

  RESPOND MSG="Loading filament..."
  # G28
  # G0 Z30
  M104 S210                   ; Set extruder temperature to 210°C (adjust for your filament)
  M109 S210                   ; Wait for extruder to reach temperature

  G92 E0                      ; Reset extruder position
  G1 E10 F200                 ; Feed filament into the extruder (adjust E value and speed if needed)
  # G28
  
  RESPOND MSG="Filament loaded successfully"

  ###### Turn off LEDs after loading ######
  SET_NOZZLE_LEDS_OFF         ; Turn off nozzle LED after filament load


[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from the extruder and form a filament tip
gcode:
  ###### Start LED effects for filament unloading ######
  SET_LOGO_LEDS_OFF           ; Deactivate the logo LED
  SET_NOZZLE_LEDS_ON          ; Activate the nozzle LED to indicate the unloading process

  RESPOND MSG="Unloading filament..."

  M104 S210                   ; Set extruder temperature to 210°C (adjust for your filament)

  M109 S210                   ; Wait for extruder to reach temperature

  G92 E0                      ; Reset extruder position
  G1 E-10 F200                ; Retract filament by 10mm to unload (adjust E value and speed)
  G1 E-5 F100                 ; Retract more to prevent oozing, slowly to form the tip

  RESPOND MSG="Forming filament tip"

  G1 E0.5 F100                ; Slightly extrude to form a clean filament tip
  G1 E-1 F50                  ; Retract a little to create a sharp point

  RESPOND MSG="Filament unloaded successfully and tip formed"

  ###### Turn off LEDs after unloading ######
  SET_NOZZLE_LEDS_OFF         ; Turn off nozzle LED after filament unload


# ;STARTGCODE
# M117 Initializing
# G90 ; use absolute coordinates
# M83 ; extruder relative mode
# M107
# G28 ;Home
# M140 S[bed_temperature_initial_layer_single] ; set bed temp
# M190 S[bed_temperature_initial_layer_single] ; wait for bed temp
# G1 Z100
# M104 S[nozzle_temperature_initial_layer] ; set extruder temp
# M109 S[nozzle_temperature_initial_layer] ; wait for extruder temp
# BED_MESH_PROFILE LOAD="default3"
# G92 E0
# G1 X-75 Y0 Z0.2 F4000 ; move to arc start
# G3 X0 Y-75 I88 Z0.2 E40 F400 ; lay arc stripe 90deg
# G0 Z1 
# G92 E0.0

[gcode_macro PRINT_START]
gcode:

    STATUS_READY
    
    {% set BED_TEMP = params.BED | default(80) | float %}	 											;Retrieve the bed temp from gcode
    {% set EXTRUDER_TEMP = params.EXTRUDER | default(200) | float %}									;Retrieve the extruder temp from gcode
    {% set chambertemp = params.CHAMBER|default(0)|int %}     #need chamber sensor
    
    SET_FAN_SPEED FAN=Nevermore SPEED=1
    STATUS_HOMING
    G28

    STATUS_READY

    # {% if chambertemp != 0 %}
      #    STATUS_HEATING_CHAMBER
      #    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 
    #     TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    # {% endif %}

    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}                             ;start heating bed
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=220                                      ;start preheating extruder
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}                                  ;wait for bed to reach target temp
    
    # M83
    # G1 E-20 F800
    # M82
#    PURGE1
    
    STATUS_MESHING    
    #BED_MESH_CALIBRATE PROFILE="ADAPTIVE" ADAPTIVE=1
    DELTA_ADAPTIVE_BED_MESH
    G0 X0 Y0 Z20 F6000

    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}                          ;set extruder temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

    STATUS_PRINTING
    PURGE2

[gcode_macro PURGE1]
gcode:
    SAVE_GCODE_STATE NAME=Prepurge_State1                                                    # Create gcode state
    
    G92 E0                                                                              # Reset extruder
    G0 F6000                                                                            # Set travel speed
    G90                                                                                 # Absolute positioning
    G0 Z10                                                                              #Initial move down for delta to reach purge location
    G0 X-15 Y-65                                                                        # Move to purge position
    G0 Z0.8                                                                             # Move to purge Z height
    M83                                                                                 # Relative extrusion mode
    G1 E5 F144                                                                          # Move filament tip
    G1 X5 E20 F144                                                                     # Purge line
    G1 E-0.1 F2100                                                                       # Retract
    G0 X15 F12000                                                                       # Rapid move to break string
    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode
    G0 Z1.6 F12000                                                                      # Z hop
    
    RESTORE_GCODE_STATE NAME=Prepurge_State1                                                 # Restore gcode state
    
[gcode_macro PURGE2]
gcode:
    SAVE_GCODE_STATE NAME=Prepurge_State2                                                    # Create gcode state
    
    G92 E0                                                                              # Reset extruder
    G0 F6000                                                                            # Set travel speed
    G90                                                                                 # Absolute positioning
    G0 Z10                                                                              #Initial move down for delta to reach purge location
    G0 X-15 Y-63                                                                        # Move to purge position
    G0 Z0.8                                                                             # Move to purge Z height
    M83                                                                                 # Relative extrusion mode
    G1 E5 F144                                                                          # Move filament tip
    G1 X5 E20 F144                                                                     # Purge line
    G1 E-0.1 F2100                                                                       # Retract
    G0 X15 F12000                                                                       # Rapid move to break string
    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode
    G0 Z1.6 F12000                                                                      # Z hop
    
    RESTORE_GCODE_STATE NAME=Prepurge_State2                                                 # Restore gcode state

[gcode_macro PRINT_END]
gcode:

    M400
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    G28
    M84

[gcode_macro ADXL_DELTA]
gcode:
    G28
    TEST_RESONANCES AXIS=0,1 OUTPUT=raw_data
    TEST_RESONANCES AXIS=-0.866025404,-0.5 OUTPUT=raw_data
    TEST_RESONANCES AXIS=0.866025404,-0.5 OUTPUT=raw_data


[gcode_macro M900]
description: Set pressure advance
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

[gcode_macro TEST_SPEED]
gcode:

    STATUS_PRINTING
    
    #Save before macro state
    SAVE_GCODE_STATE NAME=TEST_SPEED

    #Set variables
    {% set RADIUS = params.RADIUS | default(40) | int %}
    {% set HEIGHT = params.HEIGHT | default(10) | int %}
    {% set SPEED = params.SPEED | default(250) | int %}
    {% set ACCEL = params.ACCEL | default(15000) | int %}
    {% set ITERATIONS = params.ITERATIONS | default(5) | int %}

    #Home and report position
    G28
    G91  
    G1 Z-10 F{30*60}
    G90
    G28
    G0 Z{printer.toolhead.axis_maximum.x-1}
    G4 P1000
    GET_POSITION
    G4 P100
    #Go to start position
    STATUS_PRINTING

    G4 P100
    
    G0 Z{HEIGHT}
    G0 X0 Y{RADIUS} F{SPEED * 60}

    #Set printer limits to test limits
    SET_VELOCITY_LIMIT VELOCITY={SPEED} ACCEL={ACCEL}

    #Test Pattern
    {% for i in range(ITERATIONS) %}
      G2 X0 Y{RADIUS} I0 J{RADIUS * -1} F{SPEED * 60}
    {% endfor %}

    #Restore printer maximums
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}

    #Home and report new positions
    M400
    G28
    G0 Z{printer.toolhead.axis_maximum.x-1}
    G4 P1000
    GET_POSITION

    #Restore before macro state
    RESTORE_GCODE_STATE NAME=TEST_SPEED

    STATUS_READY